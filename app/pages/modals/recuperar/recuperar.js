"use strict";
var core_1 = require("@angular/core");
var modal_dialog_1 = require("nativescript-angular/modal-dialog");
var page_1 = require("ui/page");
var forms_1 = require("@angular/forms");
var enums_1 = require("ui/enums");
var RecuperarComponent = (function () {
    function RecuperarComponent(params, page, _fb) {
        this.params = params;
        this.page = page;
        this._fb = _fb;
        this.valid = false;
        this.user = {
            password: '',
            password_confirm: ''
        };
        this.validationMessages = {
            password: {
                required: "El contraseña es obligatoria",
                minLength: "El tamaño mínimo de la contraseña es de 1 dígito"
            },
            password_confirm: {
                required: "El confirmación de contraseña es obligatorio",
                minLength: "El tamaño mínimo de la confirmación de contraseña es de 1 dígitos",
                password: "Las contraseñas no coinciden"
            }
        };
    }
    RecuperarComponent.prototype.ngOnInit = function () {
        this.form = this._fb.group({
            password: [null, [forms_1.Validators.required, forms_1.Validators.minLength(1)]],
            password_confirm: [null, [forms_1.Validators.required, forms_1.Validators.minLength(1)]]
        });
        this.onTap('label1');
    };
    RecuperarComponent.prototype.validarPassword = function () {
        var usr = this.form.value;
        //console.log("p => "+usr.password.length+" pc=>"+usr.password_confirm.length);
        this.valid = false;
        if ((usr.password.length > 0 && usr.password_confirm.length > 0) && usr.password == usr.password_confirm) {
            this.valid = true;
        }
        return !this.valid;
    };
    RecuperarComponent.prototype.onTap = function (lbl) {
        var label = this.page.getViewById(lbl);
        label.animate({
            translate: { x: 0, y: -15 },
            duration: 500,
            curve: enums_1.AnimationCurve.cubicBezier(0.1, 0.1, 0.1, 1)
        });
    };
    RecuperarComponent.prototype.recuperar = function () {
        console.log("Recuperar => ", JSON.stringify(this.form.value));
        this.params.closeCallback(this.form.value);
    };
    RecuperarComponent.prototype.cerrar = function () {
        this.params.closeCallback(null);
    };
    RecuperarComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            //templateUrl: "./recuperar.html"
            template: "\n              <ScrollView class=\"modal-view-style\">\n                  <StackLayout [formGroup]=\"form\" style=\"margin: 15px;padding: 15px;height: 100%\">\n                      <Label class=\"title\" text=\"Reestablecer Contrase\u00F1a\" style=\"margin: 15px 0px 15px 15px\"></Label> \n                      \n                      <GridLayout rows=\"20 auto,auto\">\n                        <Label row=\"1\" id=\"label1\" fontSize=\"15\" (tap)=\"onTap('label1')\" text=\"Contrase\u00F1a\" textWrap=\"true\"></Label>\n                        <TextField secure=\"true\" [(ngModel)]=\"user.password\" (tap)=\"onTap('label1')\" fontSize=\"15\" row=\"1\"  text=\"\" formControlName=\"password\"></TextField>\n                        <app-error-feedback row=\"2\" [messages]=\"validationMessages.password\" [formGroup]=\"form\" controlName=\"password\"></app-error-feedback>\n                      </GridLayout> \n                      \n                      <GridLayout rows=\"20 auto,auto\"> \n                          <Label row=\"1\" id=\"label2\" fontSize=\"15\" (tap)=\"onTap('label2')\" text=\"Contrase\u00F1a Confirmaci\u00F3n\" textWrap=\"true\"></Label>\n                          <TextField secure=\"true\" [(ngModel)]=\"user.password_confirm\" (tap)=\"onTap('label2')\" fontSize=\"15\" row=\"1\"  text=\"\" formControlName=\"password_confirm\"></TextField>\n                          <!--<app-error-feedback row=\"2\" [messages]=\"validationMessages.password_confirm\" [formGroup]=\"form\" controlName=\"password_confirm\"></app-error-feedback>-->\n                          <Label  *ngIf=\"false\"  text=\"La contrase\u00F1as no coindiden\"  row=\"2\" style=\"margin:0px 0px 0px 10px;padding:0px 0px 0px 10px;color:red\"></Label>\n                      </GridLayout> \n                      \n                      <GridLayout rows=\"auto\"  columns=\"*, *\">\n                        <Button row=\"1\" col=\"0\" [text]=\"'CANCELAR'\" class=\"button-save\" style=\"width: 100%\" (tap)=\"cerrar()\" horizontalAlignment=\"center\" verticalAlignment=\"center\"></Button>\n                        <Button row=\"1\" col=\"1\" [text]=\"'RECUPERAR'\" class=\"button-save\" style=\"width: 100%\"  [ngClass]=\"{'style1': validarPassword()}\" isEnabled = \"{{valid}}\" (tap)=\"recuperar()\" horizontalAlignment=\"center\" verticalAlignment=\"center\"></Button>\n                      </GridLayout> \n                  </StackLayout>\n              </ScrollView> \n        ",
            styleUrls: ["./recuperar-common.css"]
        }), 
        __metadata('design:paramtypes', [modal_dialog_1.ModalDialogParams, page_1.Page, forms_1.FormBuilder])
    ], RecuperarComponent);
    return RecuperarComponent;
}());
exports.RecuperarComponent = RecuperarComponent;
//# sourceMappingURL=data:application/json;base64,